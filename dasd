-- GUI Library
local Library = {}
Library.__index = Library

-- Section metatable
local Section = {}
Section.__index = Section

-- Toggle metatable
local Toggle = {}
Toggle.__index = Toggle

-- Colors
local accentColor = Color3.fromRGB(0, 85, 255)
local backgroundColor = Color3.fromRGB(30, 30, 35)
local sectionColor = Color3.fromRGB(40, 40, 45)
local textColor = Color3.fromRGB(255, 255, 255)

-- Create main UI
function Library:CreateUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SkyDevUI"
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 500, 0, 400)
    mainFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
    mainFrame.BackgroundColor3 = backgroundColor
    mainFrame.BorderSizePixel = 0
    mainFrame.ClipsDescendants = true
    mainFrame.Parent = screenGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = mainFrame

    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.Size = UDim2.new(1, 0, 1, 0)
    shadow.Position = UDim2.new(0, 0, 0, 0)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = Color3.new(0, 0, 0)
    shadow.ImageTransparency = 0.8
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.ZIndex = -1
    shadow.Parent = mainFrame

    local topBar = Instance.new("Frame")
    topBar.Name = "TopBar"
    topBar.Size = UDim2.new(1, 0, 0, 40)
    topBar.Position = UDim2.new(0, 0, 0, 0)
    topBar.BackgroundColor3 = sectionColor
    topBar.BorderSizePixel = 0
    topBar.Parent = mainFrame

    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(0, 200, 1, 0)
    title.Position = UDim2.new(0, 15, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "SkyDev UI"
    title.TextColor3 = textColor
    title.TextSize = 18
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Font = Enum.Font.GothamSemibold
    title.Parent = topBar

    local tabContainer = Instance.new("Frame")
    tabContainer.Name = "TabContainer"
    tabContainer.Size = UDim2.new(1, -200, 1, 0)
    tabContainer.Position = UDim2.new(0, 200, 0, 0)
    tabContainer.BackgroundTransparency = 1
    tabContainer.Parent = topBar

    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.FillDirection = Enum.FillDirection.Horizontal
    uiListLayout.Padding = UDim.new(0, 5)
    uiListLayout.Parent = tabContainer

    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Size = UDim2.new(1, 0, 1, -40)
    contentFrame.Position = UDim2.new(0, 0, 0, 40)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = mainFrame

    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.Name = "ScrollingFrame"
    scrollingFrame.Size = UDim2.new(1, 0, 1, 0)
    scrollingFrame.Position = UDim2.new(0, 0, 0, 0)
    scrollingFrame.BackgroundTransparency = 1
    scrollingFrame.BorderSizePixel = 0
    scrollingFrame.ScrollBarThickness = 5
    scrollingFrame.ScrollBarImageColor3 = sectionColor
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    scrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    scrollingFrame.Parent = contentFrame

    local contentLayout = Instance.new("UIListLayout")
    contentLayout.Padding = UDim.new(0, 10)
    contentLayout.Parent = scrollingFrame

    local contentPadding = Instance.new("UIPadding")
    contentPadding.PaddingLeft = UDim.new(0, 15)
    contentPadding.PaddingRight = UDim.new(0, 15)
    contentPadding.PaddingTop = UDim.new(0, 15)
    contentPadding.PaddingBottom = UDim.new(0, 15)
    contentPadding.Parent = scrollingFrame

    self.ScreenGui = screenGui
    self.MainFrame = mainFrame
    self.TabContainer = tabContainer
    self.ContentFrame = contentFrame
    self.ScrollingFrame = scrollingFrame
    self.CurrentTab = nil
    self.Tabs = {}
end

-- Add tab method
function Library:AddTab(name)
    local tab = {
        Name = name,
        Sections = {}
    }
    setmetatable(tab, Library)
    
    -- Create tab button
    local tabButton = Instance.new("TextButton")
    tabButton.Name = name .. "Tab"
    tabButton.Size = UDim2.new(0, 80, 1, 0)
    tabButton.BackgroundTransparency = 1
    tabButton.Text = name
    tabButton.TextColor3 = Color3.fromRGB(200, 200, 200)
    tabButton.TextSize = 14
    tabButton.Font = Enum.Font.Gotham
    tabButton.Parent = self.TabContainer

    -- Create tab content
    local tabContent = Instance.new("Frame")
    tabContent.Name = name .. "Content"
    tabContent.Size = UDim2.new(1, 0, 1, 0)
    tabContent.Position = UDim2.new(0, 0, 0, 0)
    tabContent.BackgroundTransparency = 1
    tabContent.Visible = false
    tabContent.Parent = self.ScrollingFrame

    local sectionLayout = Instance.new("UIListLayout")
    sectionLayout.Padding = UDim.new(0, 15)
    sectionLayout.Parent = tabContent

    tab.Button = tabButton
    tab.Content = tabContent

    -- Tab selection logic
    tabButton.MouseButton1Click:Connect(function()
        self:SelectTab(tab)
    end)

    -- Select first tab by default
    if not self.CurrentTab then
        self:SelectTab(tab)
    end

    table.insert(self.Tabs, tab)
    return tab
end

-- Select tab method
function Library:SelectTab(selectedTab)
    if self.CurrentTab then
        self.CurrentTab.Content.Visible = false
        self.CurrentTab.Button.TextColor3 = Color3.fromRGB(200, 200, 200)
    end
    
    selectedTab.Content.Visible = true
    selectedTab.Button.TextColor3 = accentColor
    self.CurrentTab = selectedTab
end

-- Add section to tab
function Library:AddSection(name)
    local section = {
        Name = name,
        Elements = {}
    }
    setmetatable(section, Section)
    
    local sectionFrame = Instance.new("Frame")
    sectionFrame.Name = name .. "Section"
    sectionFrame.Size = UDim2.new(1, 0, 0, 0)
    sectionFrame.BackgroundColor3 = sectionColor
    sectionFrame.BorderSizePixel = 0
    sectionFrame.AutomaticSize = Enum.AutomaticSize.Y
    sectionFrame.Parent = self.Content

    local sectionCorner = Instance.new("UICorner")
    sectionCorner.CornerRadius = UDim.new(0, 6)
    sectionCorner.Parent = sectionFrame

    local sectionPadding = Instance.new("UIPadding")
    sectionPadding.PaddingLeft = UDim.new(0, 15)
    sectionPadding.PaddingRight = UDim.new(0, 15)
    sectionPadding.PaddingTop = UDim.new(0, 10)
    sectionPadding.PaddingBottom = UDim.new(0, 10)
    sectionPadding.Parent = sectionFrame

    local sectionTitle = Instance.new("TextLabel")
    sectionTitle.Name = "Title"
    sectionTitle.Size = UDim2.new(1, 0, 0, 20)
    sectionTitle.Position = UDim2.new(0, 0, 0, 0)
    sectionTitle.BackgroundTransparency = 1
    sectionTitle.Text = name
    sectionTitle.TextColor3 = textColor
    sectionTitle.TextSize = 16
    sectionTitle.TextXAlignment = Enum.TextXAlignment.Left
    sectionTitle.Font = Enum.Font.GothamSemibold
    sectionTitle.Parent = sectionFrame

    local elementsContainer = Instance.new("Frame")
    elementsContainer.Name = "Elements"
    elementsContainer.Size = UDim2.new(1, 0, 0, 0)
    elementsContainer.Position = UDim2.new(0, 0, 0, 25)
    elementsContainer.BackgroundTransparency = 1
    elementsContainer.AutomaticSize = Enum.AutomaticSize.Y
    elementsContainer.Parent = sectionFrame

    local elementsLayout = Instance.new("UIListLayout")
    elementsLayout.Padding = UDim.new(0, 8)
    elementsLayout.Parent = elementsContainer

    section.Frame = sectionFrame
    section.ElementsContainer = elementsContainer
    
    table.insert(self.Sections, section)
    
    return section
end

-- Add toggle to section
function Section:AddNewToggle(name)
    local toggle = {
        Value = false,
        Callbacks = {}
    }
    setmetatable(toggle, Toggle)
    
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = name .. "Toggle"
    toggleFrame.Size = UDim2.new(1, 0, 0, 30)
    toggleFrame.BackgroundTransparency = 1
    toggleFrame.Parent = self.ElementsContainer

    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Name = "Label"
    toggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
    toggleLabel.Position = UDim2.new(0, 0, 0, 0)
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Text = name
    toggleLabel.TextColor3 = textColor
    toggleLabel.TextSize = 14
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    toggleLabel.Font = Enum.Font.Gotham
    toggleLabel.Parent = toggleFrame

    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0, 50, 0, 25)
    toggleButton.Position = UDim2.new(1, -50, 0.5, -12.5)
    toggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
    toggleButton.BorderSizePixel = 0
    toggleButton.Text = ""
    toggleButton.Parent = toggleFrame

    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 12)
    toggleCorner.Parent = toggleButton

    local toggleIndicator = Instance.new("Frame")
    toggleIndicator.Name = "Indicator"
    toggleIndicator.Size = UDim2.new(0, 21, 0, 21)
    toggleIndicator.Position = UDim2.new(0, 2, 0.5, -10.5)
    toggleIndicator.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    toggleIndicator.BorderSizePixel = 0
    toggleIndicator.Parent = toggleButton

    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 10)
    indicatorCorner.Parent = toggleIndicator

    -- Toggle functionality
    local function updateToggle()
        if toggle.Value then
            toggleIndicator.Position = UDim2.new(1, -23, 0.5, -10.5)
            toggleIndicator.BackgroundColor3 = accentColor
            toggleButton.BackgroundColor3 = Color3.fromRGB(0, 45, 135)
        else
            toggleIndicator.Position = UDim2.new(0, 2, 0.5, -10.5)
            toggleIndicator.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
            toggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
        end
    end

    toggleButton.MouseButton1Click:Connect(function()
        toggle.Value = not toggle.Value
        updateToggle()
        
        -- Trigger callbacks
        for _, callback in ipairs(toggle.Callbacks) do
            pcall(callback, toggle.Value)
        end
    end)

    updateToggle()

    table.insert(self.Elements, toggle)
    return toggle
end

-- Toggle callback method
function Toggle:OnChanged(callback)
    table.insert(self.Callbacks, callback)
    return self
end

-- Initialize the library
local function CreateLibrary()
    local ui = {}
    setmetatable(ui, Library)
    ui:CreateUI()
    return ui
end

return CreateLibrary()
