local Library = {}
Library.__index = Library

-- SERVICES
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- MAIN CONSTRUCTOR
function Library.new(name, parent)
	local self = setmetatable({}, Library)

	self.ScreenGui = Instance.new("ScreenGui")
	self.ScreenGui.Name = name or "GeminiLibrary"
	self.ScreenGui.Parent = parent or LocalPlayer:WaitForChild("PlayerGui")
	self.ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	return self
end

-- WINDOW CREATION
function Library:CreateWindow(config)
	local config = config or {}
	local title = config.Title or "Window"
	local size = config.Size or UDim2.new(0, 400, 0, 500)

	local Window = {}
	local ActiveTab = nil
	local Tabs = {}

	-- Main Frame
	local mainFrame = Instance.new("Frame")
	mainFrame.Size = size
	mainFrame.Position = UDim2.new(0.5, -size.X.Offset / 2, 0.5, -size.Y.Offset / 2)
	mainFrame.BackgroundColor3 = Color3.new(0.12, 0.12, 0.16)
	mainFrame.BorderSizePixel = 0
	mainFrame.Parent = self.ScreenGui
	Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 8)

	-- Title Bar
	local titleBar = Instance.new("TextLabel")
	titleBar.Size = UDim2.new(1, 0, 0, 50)
	titleBar.BackgroundColor3 = Color3.new(0.18, 0.18, 0.22)
	titleBar.Text = title
	titleBar.TextColor3 = Color3.new(1, 1, 1)
	titleBar.TextSize = 18
	titleBar.Font = Enum.Font.SourceSansBold
	titleBar.Parent = mainFrame
	Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 8)
	
	-- Tab Container
	local tabContainer = Instance.new("Frame")
	tabContainer.Size = UDim2.new(1, -20, 0, 40)
	tabContainer.Position = UDim2.new(0, 10, 0, 55)
	tabContainer.BackgroundTransparency = 1
	tabContainer.Parent = mainFrame
	
	local tabLayout = Instance.new("UIListLayout")
	tabLayout.FillDirection = Enum.FillDirection.Horizontal
	tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
	tabLayout.Spacing = UDim.new(0, 10)
	tabLayout.Parent = tabContainer

	-- Content Frame
	local contentFrame = Instance.new("Frame")
	contentFrame.Size = UDim2.new(1, -20, 1, -105)
	contentFrame.Position = UDim2.new(0, 10, 0, 100)
	contentFrame.BackgroundTransparency = 1
	contentFrame.Parent = mainFrame

	-- Dragging Logic
	local dragging = false
	local dragStart, frameStart
	titleBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			frameStart = mainFrame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	titleBar.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
			local delta = input.Position - dragStart
			mainFrame.Position = UDim2.new(frameStart.X.Scale, frameStart.X.Offset + delta.X, frameStart.Y.Scale, frameStart.Y.Offset + delta.Y)
		end
	end)

	-- Add Tab Method
	function Window:AddTab(tabName)
		local Tab = {}
		
		local tabButton = Instance.new("TextButton")
		tabButton.Size = UDim2.new(0.5, -5, 1, 0)
		tabButton.Text = tabName:upper()
		tabButton.TextColor3 = Color3.new(0.78, 0.78, 0.78)
		tabButton.TextSize = 14
		tabButton.Font = Enum.Font.SourceSansBold
		tabButton.BackgroundColor3 = Color3.new(0.24, 0.24, 0.29)
		tabButton.Parent = tabContainer
		Instance.new("UICorner", tabButton).CornerRadius = UDim.new(0, 4)

		local content = Instance.new("ScrollingFrame")
		content.Size = UDim2.new(1, 0, 1, 0)
		content.BackgroundTransparency = 1
		content.BorderSizePixel = 0
		content.ScrollBarThickness = 4
		content.Visible = false
		content.Parent = contentFrame

		local listLayout = Instance.new("UIListLayout")
		listLayout.Padding = UDim.new(0, 10)
		listLayout.SortOrder = Enum.SortOrder.LayoutOrder
		listLayout.Parent = content

		table.insert(Tabs, {button = tabButton, content = content})

		local function SetActive()
			if ActiveTab then
				ActiveTab.button.BackgroundColor3 = Color3.new(0.24, 0.24, 0.29)
				ActiveTab.button.TextColor3 = Color3.new(0.78, 0.78, 0.78)
				ActiveTab.content.Visible = false
			end
			ActiveTab = {button = tabButton, content = content}
			tabButton.BackgroundColor3 = Color3.new(0, 0.47, 0.84)
			tabButton.TextColor3 = Color3.new(1, 1, 1)
			content.Visible = true
		end
		
		tabButton.MouseButton1Click:Connect(SetActive)

		if not ActiveTab then
			SetActive()
		end
		
		function Tab:AddSection(sectionName)
			local Section = {}
			
			local sectionFrame = Instance.new("Frame")
			sectionFrame.Size = UDim2.new(1, 0, 0, 0) -- Automatic size
			sectionFrame.AutomaticSize = Enum.AutomaticSize.Y
			sectionFrame.BackgroundTransparency = 1
			sectionFrame.LayoutOrder = #content:GetChildren()
			sectionFrame.Parent = content
			
			local sectionLayout = Instance.new("UIListLayout")
			sectionLayout.Padding = UDim.new(0, 8)
			sectionLayout.SortOrder = Enum.SortOrder.LayoutOrder
			sectionLayout.Parent = sectionFrame
			
			local sectionLabel = Instance.new("TextLabel")
			sectionLabel.Size = UDim2.new(1, 0, 0, 25)
			sectionLabel.Text = sectionName
			sectionLabel.TextColor3 = Color3.new(1, 1, 1)
			sectionLabel.Font = Enum.Font.SourceSansBold
			sectionLabel.TextSize = 16
			sectionLabel.TextXAlignment = Enum.TextXAlignment.Left
			sectionLabel.BackgroundTransparency = 1
			sectionLabel.Parent = sectionFrame

			function Section:AddToggle(cfg)
				local value = cfg.default or false
				local container = Instance.new("Frame")
				container.Size = UDim2.new(1, 0, 0, 25)
				container.BackgroundTransparency = 1
				container.Parent = sectionFrame

				local label = Instance.new("TextLabel", container)
				label.Size = UDim2.new(1, -50, 1, 0)
				label.Text = cfg.text or "Toggle"
				label.TextColor3 = Color3.new(0.78, 0.78, 0.78)
				label.TextSize = 14
				label.TextXAlignment = Enum.TextXAlignment.Left
				label.BackgroundTransparency = 1
				label.Font = Enum.Font.SourceSans
				
				local toggle = Instance.new("TextButton", container)
				toggle.Size = UDim2.new(0, 40, 0, 20)
				toggle.Position = UDim2.new(1, -40, 0.5, -10)
				toggle.Text = ""
				
				local handle = Instance.new("Frame", toggle)
				handle.Size = UDim2.new(0, 16, 0, 16)
				handle.BackgroundColor3 = Color3.new(1, 1, 1)
				
				Instance.new("UICorner", toggle).CornerRadius = UDim.new(1, 0)
				Instance.new("UICorner", handle).CornerRadius = UDim.new(1, 0)

				local function updateVisuals(isInitial)
					local pos = value and UDim2.new(1, -18, 0, 2) or UDim2.new(0, 2, 0, 2)
					local color = value and Color3.new(0, 0.67, 0.39) or Color3.new(0.31, 0.31, 0.31)
					if isInitial then
						handle.Position = pos
						toggle.BackgroundColor3 = color
					else
						TweenService:Create(handle, TweenInfo.new(0.2), {Position = pos}):Play()
						toggle.BackgroundColor3 = color
					end
					if cfg.callback then cfg.callback(value) end
				end
				
				toggle.MouseButton1Click:Connect(function()
					value = not value
					updateVisuals(false)
				end)

				updateVisuals(true)
				return {Value = function() return value end}
			end
			
			function Section:AddSlider(cfg)
				local value = cfg.default or cfg.min or 0
				local container = Instance.new("Frame", sectionFrame)
				container.Size = UDim2.new(1, 0, 0, 40)
				container.BackgroundTransparency = 1

				local label = Instance.new("TextLabel", container)
				label.Size = UDim2.new(1, 0, 0, 20)
				label.TextColor3 = Color3.new(0.78, 0.78, 0.78)
				label.TextSize = 14
				label.TextXAlignment = Enum.TextXAlignment.Left
				label.BackgroundTransparency = 1
				label.Font = Enum.Font.SourceSans

				local sliderFrame = Instance.new("Frame", container)
				sliderFrame.Size = UDim2.new(1, 0, 0, 20)
				sliderFrame.Position = UDim2.new(0, 0, 0, 20)
				sliderFrame.BackgroundTransparency = 1

				local track = Instance.new("Frame", sliderFrame)
				track.Size = UDim2.new(1, -30, 0, 5)
				track.Position = UDim2.new(0, 0, 0.5, -2.5)
				track.BackgroundColor3 = Color3.new(0.24, 0.24, 0.29)
				Instance.new("UICorner", track).CornerRadius = UDim.new(1, 0)

				local handle = Instance.new("TextButton", sliderFrame)
				handle.Size = UDim2.new(0, 15, 0, 15)
				handle.Position = UDim2.new(0, -7.5, 0.5, -7.5)
				handle.BackgroundColor3 = Color3.new(0, 0.67, 1)
				handle.Text = ""
				Instance.new("UICorner", handle).CornerRadius = UDim.new(1, 0)
				
				local valueLabel = Instance.new("TextLabel", sliderFrame)
				valueLabel.Size = UDim2.new(0, 25, 1, 0)
				valueLabel.Position = UDim2.new(1, -25, 0, 0)
				valueLabel.TextColor3 = Color3.new(1, 1, 1)
				valueLabel.TextSize = 14
				valueLabel.Font = Enum.Font.SourceSans
				valueLabel.BackgroundTransparency = 1

				local function updateValue(newValue)
					value = math.clamp(newValue, cfg.min, cfg.max)
					local ratio = (value - cfg.min) / (cfg.max - cfg.min)
					handle.Position = UDim2.new(ratio, -7.5, 0.5, -7.5)
					label.Text = string.format("%s: %."..(cfg.precision or 1).."f", cfg.text, value)
					valueLabel.Text = string.format("%."..(cfg.precision or 1).."f", value)
					if cfg.callback then cfg.callback(value) end
				end
				
				handle.MouseButton1Down:Connect(function()
					local conn
					conn = RunService.Heartbeat:Connect(function()
						local mouseX = UserInputService:GetMouseLocation().X
						local ratio = math.clamp((mouseX - track.AbsolutePosition.X) / track.AbsoluteSize.X, 0, 1)
						local newValue = cfg.min + ratio * (cfg.max - cfg.min)
						updateValue(newValue)
					end)
					UserInputService.InputEnded:Wait()
					conn:Disconnect()
				end)

				updateValue(value)
				return {SetValue = updateValue, Value = function() return value end}
			end

			function Section:AddKeybind(cfg)
				local currentKey = cfg.default or Enum.KeyCode.Z
				local container = Instance.new("Frame", sectionFrame)
				container.Size = UDim2.new(1, 0, 0, 70)
				container.BackgroundTransparency = 1

				local label = Instance.new("TextLabel", container)
				label.Size = UDim2.new(1, 0, 0, 25)
				label.Text = cfg.text or "Keybind"
				label.TextColor3 = Color3.new(0.78, 0.78, 0.78)
				label.TextSize = 14
				label.TextXAlignment = Enum.TextXAlignment.Left
				label.BackgroundTransparency = 1
				label.Font = Enum.Font.SourceSans
				
				local button = Instance.new("TextButton", container)
				button.Size = UDim2.new(1, 0, 0, 35)
				button.Position = UDim2.new(0, 0, 0, 25)
				button.BackgroundColor3 = Color3.new(0.16, 0.16, 0.2)
				button.TextColor3 = Color3.new(1, 1, 1)
				button.Text = tostring(currentKey.Name)
				button.Font = Enum.Font.SourceSans
				Instance.new("UICorner", button).CornerRadius = UDim.new(0, 4)

				button.MouseButton1Click:Connect(function()
					button.Text = "..."
					button.BackgroundColor3 = Color3.new(0.67, 0.67, 0)
					local conn
					conn = UserInputService.InputBegan:Connect(function(input, gp)
						if not gp and input.UserInputType == Enum.UserInputType.Keyboard then
							currentKey = input.KeyCode
							button.Text = tostring(currentKey.Name)
							button.BackgroundColor3 = Color3.new(0.16, 0.16, 0.2)
							conn:Disconnect()
						end
					end)
				end)

				UserInputService.InputBegan:Connect(function(input, gp)
					if not gp and input.KeyCode == currentKey then
						if cfg.callback then cfg.callback() end
					end
				end)

				return {Value = function() return currentKey end}
			end
			
			function Section:AddButton(cfg)
				local button = Instance.new("TextButton", sectionFrame)
				button.Size = UDim2.new(1, 0, 0, 35)
				button.BackgroundColor3 = Color3.new(0, 0.47, 0.84)
				button.TextColor3 = Color3.new(1, 1, 1)
				button.Text = cfg.text or "Button"
				button.Font = Enum.Font.SourceSansBold
				Instance.new("UICorner", button).CornerRadius = UDim.new(0, 4)
				
				button.MouseButton1Click:Connect(function()
					if cfg.callback then cfg.callback() end
				end)

				return button
			end

			return Section
		end
		
		return Tab
	end

	return Window
end

return Library
